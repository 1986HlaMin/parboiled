<?xml version="1.0" encoding="UTF-8"?>
<project name="parboiled" default="compile.main">

    <!-- can be overridden at the command line with -Dversion= -->
    <property name="version" value="snapshot"/>

    <target name="clean" description="Remove all generated files">
        <delete dir="target"/>
    </target>

    <target name="init">
        <path id="compile.classpath">
            <pathelement location="lib/asm/asm-all-3.2.jar"/>
            <pathelement location="lib/google-collect/google-collect-1.0.jar"/>
            <pathelement location="lib/testng/testng-5.10-jdk15.jar"/>
            <pathelement location="lib/annotations.jar"/>
            <pathelement location="lib/scala/scala-library-2.8.0.jar"/>
            <pathelement location="lib/scalatest/scalatest-1..jar"/>
        </path>

        <taskdef name="javacn" classname="org.parboiled.ant.Javacn"
                 classpath="lib/javacn-1.0.1.jar;lib/asm/asm-all-3.2.jar;"/>
        <taskdef resource="testngtasks" classpath="lib/testng/testng-5.10-jdk15.jar;"/>
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/jarjar-issue-21.jar;"/>
        <taskdef resource="proguard/ant/task.properties" classpath="lib/proguard.jar;"/>
        <taskdef resource="scala/tools/ant/antlib.xml"
                 classpath="lib/scala/scala-compiler-2.8.0.jar;lib/scala/scala-library-2.8.0.jar;"/>
    </target>

    <target name="compile.main" depends="init" description="Compile main sources">
        <mkdir dir="target/main"/>
        <javacn debug="on" destdir="target/main" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="src/main/java"/>
            <classpath refid="compile.classpath"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
        <scalac srcdir="src/main/scala" destdir="target/main">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
        </scalac>
    </target>

    <target name="compile.examples" depends="compile.main" description="Compile example sources">
        <mkdir dir="target/examples"/>
        <javacn debug="on" destdir="target/examples" source="1.5" target="1.5" encoding="utf8"
                includeantruntime="false">
            <src location="src/examples/java"/>
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
    </target>

    <target name="compile.tests" depends="compile.examples" description="Compile test sources">
        <mkdir dir="target/test"/>
        <javacn debug="on" destdir="target/test" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="src/test/java"/>
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
        <scalac srcdir="src/test/scala" destdir="target/test">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/test"/>
        </scalac>
        <copy toDir="target/test">
            <fileset dir="src/test/resources"/>
        </copy>
    </target>

    <target name="test" depends="compile.tests" description="Run all tests">
        <testng parallel="true" suitename="All Tests" outputdir="target/test-out" haltonfailure="true">
            <classfileset dir="target/test" includes="**/*Test.class"/>
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
            <classpath location="target/test"/>
        </testng>
    </target>

    <target name="javadoc" description="Builds javadoc">
        <mkdir dir="target/javadoc"/>
        <javadoc destdir="target/javadoc" windowtitle="parboiled ${version} API">
            <packageset dir="src/main/java" defaultexcludes="yes">
                <include name="org/parboiled/**"/>
                <exclude name="org/parboiled/transform/**"/>
            </packageset>
            <classpath refid="compile.classpath"/>
            <link href="http://java.sun.com/javase/6/docs/api"/>
        </javadoc>
    </target>

    <target name="manifest">
        <copy file="LICENSE" todir="target/manifest/META-INF"/>
        <copy file="NOTICE" todir="target/manifest/META-INF"/>
        <manifest file="target/manifest/META-INF/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title" value="parboiled"/>
            <attribute name="Specification-Version" value="${version}"/>
            <attribute name="Specification-Vendor" value="parboiled.org"/>
            <attribute name="Implementation-Title" value="parboiled"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-Vendor" value="parboiled.org"/>
            <attribute name="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
            <attribute name="Bundle-Version" value="${version}"/>
            <attribute name="Bundle-Description"
                       value="parboiled, a Java 1.5+ library providing a light-weight and easy-to-use, yet powerful PEG parsing facility"/>
            <attribute name="Bundle-Name" value="parboiled"/>
            <attribute name="Bundle-DocURL" value="http://www.parboiled.org"/>
            <attribute name="Bundle-Vendor" value="parboiled.org"/>
            <attribute name="Bundle-SymbolicName" value="org.parboiled"/>
        </manifest>
    </target>

    <target name="jar" depends="compile.main, manifest" description="Build main library JAR">
        <jarjar destfile="target/parboiled-${version}.full.jar" manifest="target/manifest/META-INF/MANIFEST.MF">
            <fileset dir="target/main"/>
            <fileset dir="target/manifest"/>
            <zipfileset src="lib/asm/asm-all-3.2.jar"/>
            <zipfileset src="lib/google-collect/google-collect-1.0.jar"
                        excludes="com/google/common/collect/package-info.class"/>
            <rule pattern="org.objectweb.asm.**" result="org.parboiled.asm.@1"/>
            <rule pattern="com.google.common.**" result="org.parboiled.google.@1"/>
        </jarjar>

        <!-- default Java 1.5 runtime JARs, change if you have a special setup -->

        <!-- WINDOWS -->
        <condition property="jdk.lib.1.5" value="${java.home}/lib/rt.jar">
            <os family="windows"/>
        </condition>

        <!-- OSX -->
        <condition property="jdk.lib.1.5"
                   value="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/classes.jar">
            <and>
                <os family="mac"/>
                <os family="unix"/>
            </and>
        </condition>

        <!-- UNIX -->
        <condition property="jdk.lib.1.5" value="${java.home}/lib/rt.jar">
            <and>
                <not>
                    <os family="mac"/>
                </not>
                <os family="unix"/>
            </and>
        </condition>

        <proguard>
            -libraryjars "${jdk.lib.1.5}"
            -libraryjars "lib/annotations.jar"
            -libraryjars "lib/google-collect/jsr305.jar"
            -injars "target/parboiled-${version}.full.jar"
            -outjars "target/parboiled-${version}.jar"

            -keep public class !org.parboiled.asm.**, !org.parboiled.google.**, org.parboiled.** { public protected *; }
            -keep class org.parboiled.google.base.Predicate { *; }

            -keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
            -keepclassmembers class org.parboiled.google.base.FinalizableReference { void finalizeReferent(); }
            -keepclassmembers class org.parboiled.google.base.internal.Finalizer { java.lang.ref.ReferenceQueue
            startFinalizer(java.lang.Class, java.lang.Object); }
            -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }

            -dontoptimize
            -dontobfuscate
        </proguard>
    </target>

    <target name="testjar" depends="compile.tests, jar" description="Run all tests against the library jar">
        <testng verbose="2" parallel="true" suitename="All Tests" outputdir="target/test-out" haltonfailure="true">
            <classfileset dir="target/test" includes="**/*Test.class">
                <exclude name="org/parboiled/transform/**"/>
                <exclude name="org/parboiled/support/ParseTreeUtilsTest.class"/>
            </classfileset>
            <classpath location="target/parboiled-${version}.jar"/>
            <classpath location="target/examples"/>
            <classpath location="target/test"/>
            <classpath location="lib/asm/asm-util-3.2.jar"/>
        </testng>
    </target>

    <target name="jar.source" depends="manifest" description="Create a JAR with main sources">
        <zip destfile="target/parboiled-${version}-src.jar">
            <fileset dir="src/main/java"/>
            <fileset dir="target/manifest"/>
        </zip>
    </target>

    <target name="jar.examples" depends="compile.examples" description="Creates JARs for examples">
        <jar destfile="target/parboiled-${version}-examples.jar">
            <fileset dir="target/examples"/>
        </jar>
        <zip destfile="target/parboiled-${version}-examples-src.jar">
            <fileset dir="examples"/>
        </zip>
    </target>

    <target name="jar.javadoc" depends="javadoc" description="Creates a JAR containing javadocs">
        <zip destfile="target/parboiled-${version}-javadoc.jar">
            <fileset dir="target/javadoc"/>
        </zip>
    </target>

    <target name="dist" depends="clean, test, testjar, jar.source, jar.javadoc"
            description="Compiles, tests and jars everything">
    </target>

    <target name="run-example-abc" depends="compile.examples" description="Run the Abc example">
        <java classname="org.parboiled.examples.abc.Main" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc0" depends="compile.examples" description="Run the Calculator0 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser0" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc1" depends="compile.examples" description="Run the Calculator1 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser1" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc2" depends="compile.examples" description="Run the Calculator2 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser2" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc3" depends="compile.examples" description="Run the Calculator3 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser3" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc4" depends="compile.examples" description="Run the Calculator4 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser4" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-calc5" depends="compile.examples" description="Run the Calculator5 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser5" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-rpn" depends="compile.examples" description="Run the RPN example">
        <java classname="org.parboiled.examples.rpn.Main" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-time" depends="compile.examples" description="Run the Time example">
        <java classname="org.parboiled.examples.time.Main" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>

    <target name="run-example-java" depends="compile.examples" description="Run the Java example">
        <java classname="org.parboiled.examples.java.Main" fork="true">
            <classpath refid="compile.classpath"/>
            <classpath location="target/main"/>
            <classpath location="target/examples"/>
        </java>
    </target>


</project>