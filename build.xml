<?xml version="1.0" encoding="UTF-8"?>
<project name="parboiled" default="compile">

    <!-- can be overridden at the command line with -Dversion= -->
    <property name="version" value="snapshot"/>

    <property name="lib.asm" value="Main/lib_managed/scala_2.8.1/compile/asm-all-3.3.jar"/>
    <property name="lib.collect" value="Main/lib_managed/scala_2.8.1/compile/google-collections-1.0.jar"/>
    <property name="lib.testng" value="Main/lib_managed/scala_2.8.1/test/testng-5.14.1.jar"/>
    <property name="lib.annotations" value="Main/lib/annotations.jar"/>
    <property name="lib.scala" value="project/boot/scala-2.8.1/lib/scala-library.jar"/>
    <property name="lib.scalatest" value="Main/lib_managed/scala_2.8.1/test/scalatest-1.2.jar"/>

    <target name="clean" description="Remove all generated files">
        <delete dir="target"/>
    </target>

    <target name="init">
        <path id="compile.classpath.java">
            <pathelement location="${lib.asm}"/>
            <pathelement location="${lib.collect}"/>
            <pathelement location="${lib.testng}"/>
            <pathelement location="${lib.annotations}"/>
        </path>

        <path id="compile.classpath.scala">
            <pathelement location="${lib.collect}"/>
            <pathelement location="${lib.testng}"/>
            <pathelement location="${lib.scala}"/>
            <pathelement location="${lib.scalatest}"/>
        </path>

        <path id="testng.classpath">
            <fileset dir="Main/lib_managed/scala_2.8.1/test" includes="*.jar"/>
        </path>

        <taskdef name="javacn" classname="org.parboiled.ant.Javacn" classpath="ant-lib/javacn-1.0.1.jar;${lib.asm};"/>
        <taskdef resource="testngtasks" classpath="${lib.testng}"/>
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="ant-lib/jarjar-issue-21.jar;"/>
        <taskdef resource="proguard/ant/task.properties" classpath="ant-lib/proguard.jar;"/>
        <taskdef resource="scala/tools/ant/antlib.xml" classpath="project/boot/scala-2.8.1/lib/scala-compiler.jar;${lib.scala}"/>
    </target>
    
    

    <target name="compile.main.java" depends="init" description="Compile main java sources">
        <mkdir dir="Main/target/main/java"/>
        <javacn debug="on" destdir="Main/target/main/java" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="Main/src/main/java"/>
            <classpath refid="compile.classpath.java"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
    </target>

    <target name="compile.main.scala" depends="compile.main.java" description="Compile main scala sources">
        <mkdir dir="Main/target/main/scala"/>
        <scalac srcdir="Main/src/main/scala" destdir="Main/target/main/scala">
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
        </scalac>
    </target>

    <target name="compile.main" depends="compile.main.java, compile.main.scala" description="Compile all main sources"/>    

    
    
    <target name="compile.examples.java" depends="compile.main.java" description="Compile java example sources">
        <mkdir dir="Examples/target/main/java"/>
        <javacn debug="on" destdir="Examples/target/main/java" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="Examples/src/main/java"/>
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
    </target>

    <target name="compile.examples.scala" depends="compile.main.scala" description="Compile scala example sources">
        <mkdir dir="Examples/target/main/scala"/>
		<scalac srcdir="Examples/src/main/scala" destdir="Examples/target/main/scala">
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
			<classpath location="Main/target/main/scala"/>
        </scalac>
    </target>

	<target name="compile.examples" depends="compile.examples.java, compile.examples.scala" description="Compile all example sources"/>    

    
    
    <target name="compile.tests.main.java" depends="compile.main.java" description="Compile main java test sources">
        <mkdir dir="Main/target/test/java"/>
        <javacn debug="on" destdir="Main/target/test/java" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="Main/src/test/java"/>
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
    </target>
    
    <target name="compile.tests.main.scala" depends="compile.main.scala" description="Compile main scala test sources">
        <mkdir dir="Main/target/test/scala"/>
        <scalac srcdir="Main/src/test/scala" destdir="Main/target/test/scala">
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Main/target/main/scala"/>
        </scalac>
    </target>
    
    <target name="compile.tests.main" depends="compile.tests.main.java, compile.tests.main.scala" description="Compile all main test sources"/>
        
    

    <target name="compile.tests.examples.java" depends="compile.examples.java, compile.tests.main.java" description="Compile examples java test sources">
        <mkdir dir="Examples/target/test/java"/>
        <javacn debug="on" destdir="Examples/target/test/java" source="1.5" target="1.5" encoding="utf8" includeantruntime="false">
            <src location="Examples/src/test/java"/>
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Main/target/test/java"/>
            <classpath location="Examples/target/main/java"/>
            <compilerarg line="-Xlint:all -Xlint:-serial"/>
        </javacn>
        <copy toDir="Examples/target/test/java">
            <fileset dir="Examples/src/test/resources"/>
        </copy>
    </target>

    <target name="compile.tests.examples.scala" depends="compile.tests.examples.java" description="Compile examples scala test sources">
        <mkdir dir="Examples/target/test/scala"/>
        <scalac srcdir="Examples/src/test/scala" destdir="Examples/target/test/scala">
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Main/target/main/scala"/>
			<classpath location="Examples/target/main/scala"/>
        </scalac>
    </target>

    <target name="compile.tests.examples" depends="compile.tests.examples.java, compile.tests.examples.scala" description="Compile all examples test sources"/>
    
   
    
    <target name="compile" depends="compile.main, compile.examples, compile.tests.main, compile.tests.examples" description="Compile everything"/>

    
    
    <target name="test.main" depends="compile.tests.main" description="Run main tests">
        <testng parallel="true" suitename="Main Tests" outputdir="Main/target/test-output" haltonfailure="true">
            <classfileset dir="Main/target/test/java" includes="**/*Test.class"/>
            <classfileset dir="Main/target/test/scala" includes="**/*Test.class"/>
            <classpath refid="testng.classpath"/>
            <classpath refid="compile.classpath.java"/>
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Main/target/main/scala"/>
            <classpath location="Main/target/test/java"/>
            <classpath location="Main/target/test/scala"/>
        </testng>
    </target>

    <target name="test.examples" depends="compile.tests.examples" description="Run examples tests">
        <testng parallel="true" suitename="Examples Tests" outputdir="Examples/target/test-output" haltonfailure="true">
            <classfileset dir="Examples/target/test/java" includes="**/*Test.class"/>
            <classfileset dir="Examples/target/test/scala" includes="**/*Test.class"/>
            <classpath refid="testng.classpath"/>
            <classpath refid="compile.classpath.java"/>
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Main/target/main/scala"/>
            <classpath location="Main/target/test/java"/>
            <classpath location="Main/target/test/scala"/>
            <classpath location="Examples/target/main/java"/>
            <classpath location="Examples/target/main/scala"/>
            <classpath location="Examples/target/test/java"/>
            <classpath location="Examples/target/test/scala"/>
        </testng>
    </target>

    <target name="test" depends="test.main, test.examples" description="Run all tests"/>



    <target name="javadoc" description="Builds javadoc">
        <mkdir dir="target/javadoc"/>
        <javadoc destdir="target/javadoc" windowtitle="parboiled ${version} API">
            <packageset dir="Main/src/main/java" defaultexcludes="yes">
                <include name="org/parboiled/**"/>
                <exclude name="org/parboiled/transform/**"/>
            </packageset>
            <classpath refid="compile.classpath.java"/>
            <link href="http://download.oracle.com/javase/6/docs/api/"/>
        </javadoc>
    </target>

	<target name="scaladoc" description="Builds scaladoc">
        <mkdir dir="target/scaladoc"/>
        <scaladoc srcdir="Main/src/main/scala" destdir="target/scaladoc" doctitle="parboiled ${version} API">
            <classpath refid="compile.classpath.scala"/>
            <classpath location="Main/target/main/java"/>
        </scaladoc>
    </target>

	<target name="doc" depends="javadoc, scaladoc" description="Build all documentation"/>



    <target name="manifest">
        <copy file="LICENSE" todir="target/manifest/META-INF"/>
        <copy file="NOTICE" todir="target/manifest/META-INF"/>
        <manifest file="target/manifest/META-INF/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Specification-Title" value="parboiled"/>
            <attribute name="Specification-Version" value="${version}"/>
            <attribute name="Specification-Vendor" value="parboiled.org"/>
            <attribute name="Implementation-Title" value="parboiled"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-Vendor" value="parboiled.org"/>
            <attribute name="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
            <attribute name="Bundle-Version" value="${version}"/>
            <attribute name="Bundle-Description"
                       value="parboiled, a Java 1.5+/Scala 2.8 library providing a light-weight and easy-to-use, yet powerful PEG parsing facility"/>
            <attribute name="Bundle-Name" value="parboiled"/>
            <attribute name="Bundle-DocURL" value="http://www.parboiled.org"/>
            <attribute name="Bundle-Vendor" value="parboiled.org"/>
            <attribute name="Bundle-SymbolicName" value="org.parboiled"/>
        </manifest>
    </target>

    <target name="jar.java" depends="compile.main, manifest" description="Create main java library JAR">
        <jarjar destfile="target/parboiled4j-${version}.full.jar" manifest="target/manifest/META-INF/MANIFEST.MF">
            <fileset dir="Main/target/main/java"/>
            <fileset dir="target/manifest"/>
            <zipfileset src="${lib.asm}"/>
            <zipfileset src="${lib.collect}" excludes="com/google/common/collect/package-info.class"/>
            <rule pattern="org.objectweb.asm.**" result="org.parboiled.asm.@1"/>
            <rule pattern="com.google.common.**" result="org.parboiled.google.@1"/>
        </jarjar>

        <!-- default Java 1.5 runtime JARs, change if you have a special setup -->

        <!-- WINDOWS -->
        <condition property="jdk.lib.1.5" value="${java.home}/lib/rt.jar">
            <os family="windows"/>
        </condition>

        <!-- OSX -->
        <condition property="jdk.lib.1.5"
                   value="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/classes.jar">
            <and>
                <os family="mac"/>
                <os family="unix"/>
            </and>
        </condition>

        <!-- UNIX -->
        <condition property="jdk.lib.1.5" value="${java.home}/lib/rt.jar">
            <and>
                <not>
                    <os family="mac"/>
                </not>
                <os family="unix"/>
            </and>
        </condition>

        <proguard>
            -libraryjars "${jdk.lib.1.5}"
            -libraryjars "${lib.annotations}"
            -injars "target/parboiled4j-${version}.full.jar"
            -outjars "target/parboiled4j-${version}.jar"

            -keep public class !org.parboiled.asm.**, !org.parboiled.google.**, org.parboiled.** { public protected *; }
            -keep class org.parboiled.google.base.Predicate { *; }

            -keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
            -keepclassmembers class org.parboiled.google.base.FinalizableReference { void finalizeReferent(); }
            -keepclassmembers class org.parboiled.google.base.internal.Finalizer { java.lang.ref.ReferenceQueue
            startFinalizer(java.lang.Class, java.lang.Object); }
            -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }

            -dontoptimize
            -dontobfuscate
        </proguard>
    </target>


    <target name="jar.scala" depends="jar.java" description="Create main scala library JAR">
        <jarjar destfile="target/parboiled4s-${version}.jar" manifest="target/manifest/META-INF/MANIFEST.MF">
            <fileset dir="Main/target/main/scala"/>
            <zipfileset src="target/parboiled4j-${version}.jar">
                <exclude name="org/parboiled/transform/**"/>
                <exclude name="org/parboiled/asm/**"/>                
                <exclude name="org/parboiled/Parboiled.class"/>                
            </zipfileset>
        </jarjar>
    </target>

    <target name="jar.all" depends="jar.java" description="Create java+scala library JAR">
        <jarjar destfile="target/parboiled-${version}.jar" manifest="target/manifest/META-INF/MANIFEST.MF">
            <fileset dir="Main/target/main/scala"/>
            <zipfileset src="target/parboiled4j-${version}.jar"/>
        </jarjar>
    </target>

	<target name="jar" depends="jar.java, jar.scala, jar.all" description="Build all main library JARs"/>


    <target name="testjar.java" depends="compile.tests.main.java, compile.tests.examples.java, jar.java" description="Run all java tests against the java library jar">
        <testng verbose="2" parallel="true" suitename="All Tests" outputdir="target/test-output" haltonfailure="true">
            <classfileset dir="." includes="Main/target/test/java/**/*Test.class,Examples/target/test/java/**/*Test.class">
                <exclude name="org/parboiled/transform/**"/>
                <exclude name="org/parboiled/support/ParseTreeUtilsTest.class"/>
				<exclude name="org/parboiled/support/ValueStackTest.class"/>
            </classfileset>
            <classpath location="target/parboiled4j-${version}.jar"/>
            <classpath location="Main/target/test/java"/>
            <classpath location="Examples/target/test/java"/>
        </testng>
    </target>

    <target name="testjar.scala" depends="compile.tests.main.scala, compile.tests.examples.scala, jar.scala" description="Run all scala tests against the scala library jar">
        <testng verbose="2" parallel="true" suitename="All Tests" outputdir="target/test-output" haltonfailure="true">
            <classfileset dir="." includes="Main/target/test/scala/**/*Test.class,Examples/target/test/scala/**/*Test.class" />
            <classpath refid="compile.classpath.scala"/>
            <classpath location="target/parboiled4s-${version}.jar"/>
            <classpath location="Main/target/test/scala"/>
			<classpath location="Examples/target/test/scala"/>
        </testng>
    </target>

	<target name="testjar" depends="testjar.java, testjar.scala" description="Build all tests against the main library JARs"/>



    <target name="jar.source" depends="manifest" description="Create a JAR with main sources">
        <zip destfile="target/parboiled-${version}-src.jar">
            <fileset dir="Main/src/main/java"/>
			<fileset dir="Main/src/main/scala"/>
            <fileset dir="target/manifest"/>
        </zip>
    </target>

    <target name="jar.javadoc" depends="javadoc" description="Creates a JAR containing javadocs">
        <zip destfile="target/parboiled4j-${version}-javadoc.jar">
            <fileset dir="target/javadoc"/>
        </zip>
    </target>

    <target name="jar.scaladoc" depends="scaladoc" description="Creates a JAR containing scaladocs">
        <zip destfile="target/parboiled4s-${version}-scaladoc.jar">
            <fileset dir="target/scaladoc"/>
        </zip>
    </target>

	<target name="jar.doc" depends="jar.javadoc, jar.scaladoc" description="Create javadoc and scaladoc JARs"/>

    <target name="dist" depends="clean, jar, test, testjar, jar.source, jar.doc"
            description="Compiles, tests and jars everything">
    </target>

    <target name="run-example-abc" depends="compile.examples.java" description="Run the Abc example">
        <java classname="org.parboiled.examples.abc.Main" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-calc0" depends="compile.examples.java" description="Run the Calculator0 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser0" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-calc1" depends="compile.examples.java" description="Run the Calculator1 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser1" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-calc2" depends="compile.examples.java" description="Run the Calculator2 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser2" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-calc3" depends="compile.examples.java" description="Run the Calculator3 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser3" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-calc4" depends="compile.examples.java" description="Run the Calculator4 example">
        <java classname="org.parboiled.examples.calculators.CalculatorParser4" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-time" depends="compile.examples.java" description="Run the Time example">
        <java classname="org.parboiled.examples.time.Main" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
        </java>
    </target>

    <target name="run-example-java" depends="compile.examples.java" description="Run the Java example">
        <java classname="org.parboiled.examples.java.Main" fork="true">
            <classpath refid="compile.classpath.java"/>
            <classpath location="Main/target/main/java"/>
            <classpath location="Examples/target/main/java"/>
            <arg line="${base}"/>
        </java>
    </target>

</project>