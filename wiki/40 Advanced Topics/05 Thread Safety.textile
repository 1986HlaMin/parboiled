h3. Parser (_parboiled for Java_)

The parser classes created by _parboiled for Java_ are not thread-safe. This means you have to create a separate parser instance for each thread you would like to run your parser concurrently from. However, once _parboiled_ has extended your parser class during the initial call to "Parboiled.createParser":http://sirthias.github.com/parboiled/javadoc/org/parboiled/Parboiled.html#createParser(java.lang.Class,%20java.lang.Object...) all further parser object instantiations are fast. If your application needs to regularly create a lot of parser instances you should also consider using the "BaseParser.newInstance()":http://sirthias.github.com/parboiled/javadoc/org/parboiled/BaseParser.html#newInstance() call for creating your parsers. Since this call does not use reflection for object creation it is significantly faster than "Parboiled.createParser":http://sirthias.github.com/parboiled/javadoc/org/parboiled/Parboiled.html#createParser(java.lang.Class,%20java.lang.Object...).

h3. Rule Tree

Since the rule tree does not hold any state during rule execution it should be concurrently usable by multiple parser instances from multiple threads, once you have a rule tree built and the root rule properly created.

h3. ParseRunners

Similar to the parser itself the "ParseRunner":http://sirthias.github.com/parboiled/javadoc/org/parboiled/ParseRunner.html implementations provided by _parboiled_ are not threadsafe. This means that you should not use the same instance concurrently from multiple threads without synchronization. However, since ParseRunners are lightweight you can just create new instances for every parse (which is exactly what the static run(...) methods (like "ReportingParseRunner.run(...)":http://sirthias.github.com/parboiled/javadoc/org/parboiled/ReportingParseRunner.html#run(org.parboiled.Rule,%20java.lang.String)) do).


<!-- please do not remove the GA tracking snippet below -->
<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">try { var pageTracker = _gat._getTracker("UA-11564948-1"); pageTracker._trackPageview();} catch(err) {}</script>
